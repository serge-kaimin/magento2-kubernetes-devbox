replicaCount: 1

image:
  # use local image builded
  repository: magento2-nginx
  pullPolicy: Never

nameOverride: ""
fullnameOverride: ""

#service:
#  type: NodePort
#  port: 8001
#  nodePort: 30301

## NFS Filestore instance
nfs:
  mountOptions: " "
  ## Set IP address
  server: "192.168.0.140"
  ## Set file share name
  path: "/var/www/magento2:/Code/magento2-kubernetes-devbox/src/magento2"

xdebugService:
  type: NodePort
  port: 8002
  nodePort: 30302


resources: {}
  # Uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

php-fpm:
  fullname: magento-phpfpm
  service:
    type: NodePort
    nodePort: 9000

mariadb:
  #https://hub.helm.sh/charts/stable/mariadb
  fullname: magento-mysql
  mariadbUser: magento
  rootUser.password: magento
  mariadbDatabase: magento
  service:
    type: NodePort
    nodePort: 30306
  persistence:
    size: 4Gi


mysql:
  fullname: magento-mysql
  mysqlRootPassword: "123123q"
  MYSQL_ROOT_PASSWORD: "magento"
  service:
    type: NodePort
    nodePort: 30306
  persistence:
    size: 4Gi

nfs-server:
  fullname: magento-mysql
  SHARED_DIRECTORY: /data/


#redis:
#  usePassword: false
#  master:
#    disableCommands: []
#    persistence:
#      enabled: false
#  cluster:
#    enabled: false

#rabbitmq:
#  service:
#    type: NodePort
#  rabbitmq:
#    username: admin
#    password: 123123q

#elasticsearch:
#  imageTag: "6.7.1"
#  esMajorVersion: 6

 # replicas: 1
 # minimumMasterNodes: 1

  # Permit co-located instances for solitary minikube virtual machines.
  antiAffinity: "soft"

  # Request smaller persistent volumes.
  volumeClaimTemplate:
    accessModes: [ "ReadWriteOnce" ]
    storageClassName: "standard"
    resources:
      requests:
        storage: 100M

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: www.magento2.localhost
      paths: [/]
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}


# Configure liveness and readiness probe values
## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
livenessProbe:
  enabled: false
  httpGet:
    path: /
    port: 8080
  failureThreshold: 3
  initialDelaySeconds: 0
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1
readinessProbe:
  enabled: false
  httpGet:
    path: /
    port: 8080
  failureThreshold: 3
  initialDelaySeconds: 0
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1